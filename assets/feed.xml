---
layout: compress
permalink: /feed.xml
# Atom Feed, reference: https://validator.w3.org/feed/docs/atom.html
---

<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/">
  <channel>
    <title>{{ site.title | default: site.name | default: site.url | xml_escape }}</title>
    <description>{% if site.description %}{{ site.description | xml_escape }}{% endif %}</description>
    <sy:updatePeriod>{{ site.feed_update_period | default: "daily" | xml_escape }}</sy:updatePeriod>
    <sy:updateFrequency>{{ site.feed_update_frequency | default: 1 | xml_escape }}</sy:updateFrequency>

    <link>{{ site.url | append: site.baseurl | xml_escape }}</link>
    <atom:link href="{{ site.url | append: site.baseurl | append: '/feed.xml' | xml_escape }}" rel="self" type="application/rss+xml" />

    {% assign latest = site.posts | first %}
    {% if latest %}
      <lastBuildDate>{{ latest.date | date_to_rfc822 }}</lastBuildDate>
    {% endif %}

    {% assign feed_items = site.feed_items | default: 10 %}
    {% for post in site.posts limit:feed_items %}
      <item>
        <title>{{ post.title | xml_escape }}</title>
        {% if site.social and site.social.name %}
        <dc:creator>{{ site.social.name | xml_escape }}</dc:creator>
        {% endif %}

        {%- comment -%}
          Build absolute host and post URL values (rendered now so replacements use actual strings).
        {%- endcomment -%}
        {% assign host = site.url | append: site.baseurl %}
        {% assign post_abs = host | append: post.url %}

        {%- comment -%}
          Capture post HTML, then perform literal replacements that insert the expanded host/post_abs values.
          We use capture to build replacement strings so Liquid expands host/post_abs before use.
        {%- endcomment -%}
        {% capture raw_content %}{{ post.content | strip }}{% endcapture %}
        {% capture href_rep %} href="{{ host }}/{% endcapture %}
        {% capture src_rep %} src="{{ host }}/{% endcapture %}
        {% capture proto_href %} href="https://{% endcapture %}
        {% capture proto_src %} src="https://{% endcapture %}
        {% capture frag_rep %} href="{{ post_abs }}# {% endcapture %}

        {% assign c = raw_content
           | replace: ' href="/', href_rep
           | replace: ' src="/', src_rep
           | replace: ' href="//', proto_href
           | replace: ' src="//', proto_src
        %}

        {%- comment -%}
          Replace fragment-only links like href="#foo" -> href="POSTABS#foo".
          Because Liquid replace is literal, replace the sequence ' href="#' with the prepared frag_rep string.
        {%- endcomment -%}
        {% assign c = c | replace: ' href="#', frag_rep %}

        <description><![CDATA[{{ c | strip_newlines }}]]></description>

        <pubDate>{{ post.date | date_to_rfc822 }}</pubDate>
        <link>{{ post_abs | xml_escape }}</link>
        <guid isPermaLink="true">{{ post_abs | xml_escape }}</guid>
      </item>
    {% endfor %}
  </channel>
</rss>
